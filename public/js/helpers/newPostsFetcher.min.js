"use strict";window.fetchNewPostsAndSave=function(subreddit){return new Promise(function(resolve,reject){var fireRef=firebase.database().ref();fireRef.once("value").then(function(snapshot){var finalPostId=void 0;var posts=snapshot.child("posts/meta").val();var index=0;var newestCreatedAt=0;for(key in posts){var post=posts[key];if(post&&!post.importedByUrl&&post.createdAt>newestCreatedAt){newestCreatedAt=post.createdAt;finalPostId=post.id}}var numFetches=0;var maxFetches=10;var finalPostWasReached=false;var afterRedditPostId=void 0;function fetchMore(){return!finalPostWasReached&&numFetches<maxFetches}var totalData=[];function fetchPosts(callback){reddit.new(subreddit).limit(100).after(afterRedditPostId).fetch(function(json){var moreData=json.data.children.filter(function(post){return!post.data.stickied});moreData=moreData.map(function(post){var _post$data=post.data,title=_post$data.title,url=_post$data.url,created_utc=_post$data.created_utc,score=_post$data.score,author=_post$data.author,id=_post$data.id;return{title:title,url:url,createdAt:created_utc,score:score,author:author,id:id}});var finalPostIndex=void 0;var finalPost=moreData.find(function(post,index){finalPostIndex=index;return post.id===finalPostId});if(finalPost){moreData.splice(finalPostIndex);totalData=totalData.concat(moreData);finalPostWasReached=true;return callback()}else{totalData=totalData.concat(moreData);numFetches++;if(!fetchMore()){return callback({code:"FinalPostNotFound",message:"finalPostId was not seen during the data fetching, maybe the post was deleted."})}}afterRedditPostId="t3_"+moreData[moreData.length-1].id;callback()})}function finalPostReached(err){if(err){reject(err);return}if(totalData.length===0){reject({code:"NoNewPosts",message:"The newest post in the database matched the newest post on reddit"});return}var fetchData={newestPost:totalData[0],updatedAt:Date.now()};fireRef.child("fetch").set(fetchData);totalData.forEach(function(post){var selftext=post.selftext,id=post.id;delete post.selftext;var postMeta=Object.assign({hidden:false,marked:false},post)});resolve(totalData)}async.whilst(fetchMore,fetchPosts,finalPostReached)})})};